{"version":3,"sources":["components/Home.js","components/Gallery.js","components/Videos.js","components/Error.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","class","React","Component","Gallery","Videos","Error","Nav","to","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mXA4CeA,G,6KArCP,OACA,yBAAKC,UAAU,QAIvB,8BAEA,+CAEA,sDAEA,yBAAKC,MAAM,UAEN,yBAAKA,MAAM,WACJ,yBAAKA,MAAM,QACX,yCACA,+WACA,qGAHA,IAG8E,oH,GApBvEC,IAAMC,YCyCVC,G,6KAtCP,OACA,yBAAKJ,UAAU,WAIvB,8BAEA,+CACC,uCACA,0CACD,wCACA,oDAEA,yBAAKC,MAAM,UACC,yBAAKA,MAAM,SACX,yBAAKA,MAAM,QACV,yBAAKA,MAAM,SACX,yBAAKA,MAAM,SACX,yBAAKA,MAAM,SACT,yBAAKA,MAAM,SACX,yBAAKA,MAAM,e,GAvBJC,IAAMC,YCkDbE,G,6KA9CP,OACA,yBAAKL,UAAU,UAIvB,8BAEA,+CACC,uCACA,0CACD,wCACA,mDAEA,yBAAKC,MAAM,UAEC,yBAAKA,MAAM,UACX,yBAAKA,MAAM,YACX,yBAAKA,MAAM,aAEV,yBAAKA,MAAM,YACZ,yBAAKA,MAAM,SACX,wHACA,8E,GA1BSC,IAAMC,YC2BZG,E,uKAxBP,OACA,yBAAKN,UAAU,SAKvB,8BACA,2D,GAVoBE,IAAMC,WCcXI,EAfH,WAER,OAEA,6BAEA,kBAAC,IAAD,CAASC,GAAG,KAAZ,SACA,kBAAC,IAAD,CAASA,GAAG,YAAZ,YACA,kBAAC,IAAD,CAASA,GAAG,WAAZ,aCkCWC,E,uKA3Bb,OAKQ,kBAAC,IAAD,KACJ,6BACA,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWZ,EAAMa,OAAK,IACtC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWP,IAClC,kBAAC,IAAD,CAAOM,KAAK,UAAUC,UAAWN,IACjC,kBAAC,IAAD,CAAOM,UAAWL,W,GAjBRJ,IAAMC,WCFJU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c78d11bd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/Home.css\";\r\n\r\n\r\nclass Home extends React.Component {\r\n \r\n    render() {\r\n        return (\r\n        <div className=\"Page\">\r\n  \r\n           \r\n\r\n<body>\r\n\r\n<h1>Nathan Williams</h1>\r\n\r\n<p>Welcome to my Portfolio</p>\r\n                \r\n<div class=\"mypic\"></div>\r\n            \r\n     <div class=\"Aboutme\">\r\n            <div class=\"text\">\r\n            <h4>About Me </h4>\r\n            <p> I attended Lehman College to obtain a Bachelor degree in Computer Graphics and Imaging. Ever since my earlier years I have been interested in the underlying processes that go into developing video games. I was particularly engrossed in animation and character modeling and have worked to constantly improve my aptitude in those areas. </p>\r\n            <p> Please go to the website below for my Resume and contact information </p> <h5> https://www.linkedin.com/in/nathan-williams-6b57a712b/detail/contact-info/ </h5>\r\n            </div>\r\n            </div>\r\n\r\n</body>\r\n\r\n\r\n\r\n            </div>\r\n            \r\n            \r\n        );\r\n        \r\n        }\r\n    \r\n    \r\n    }\r\n    //content:url(\".././images/picof.jpg\");\r\n\r\n\r\nexport default Home;\r\n//background-image: url(\".././images/A422roomfullview.jpg\");","import React from \"react\";\r\nimport \"../css/Gallery.css\";\r\n\r\n\r\nclass Gallery extends React.Component {\r\n \r\n    render() {\r\n        return (\r\n        <div className=\"Gallery\">\r\n       \r\n            \r\n           \r\n<body>\r\n\r\n<h1>Nathan Williams</h1>\r\n <h2> Home/ </h2> \r\n <h2> Gallery/ </h2> \r\n<h2> Videos </h2>\r\n<p>Welcome to my Gallery</p>\r\n                \r\n<div class=\"mypic\"></div>\r\n            <div class=\"back\"></div>\r\n            <div class=\"img\"></div>\r\n             <div class=\"img2\"></div>\r\n             <div class=\"img3\"></div>\r\n             <div class=\"img4\"></div>\r\n               <div class=\"img5\"></div>\r\n               <div class=\"img6\"></div>\r\n\r\n</body>\r\n\r\n\r\n\r\n            </div>\r\n            \r\n            \r\n        );\r\n        \r\n        }\r\n    \r\n    \r\n    }\r\n\r\n\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport \"../css/Videos.css\";\r\n\r\n\r\nclass Videos extends React.Component {\r\n \r\n\r\n    render() {\r\n        return (\r\n        <div className=\"Videos\">\r\n            \r\n            \r\n           \r\n<body>\r\n\r\n<h1>Nathan Williams</h1>\r\n <h2> Home/ </h2> \r\n <h2> Gallery/ </h2> \r\n<h2> Videos </h2>\r\n<p>Welcome to my Videos</p>\r\n                \r\n<div class=\"mypic\"></div>\r\n\r\n            <div class=\"cover\"></div>\r\n            <div class=\"vidshot\"></div>\r\n            <div class=\"vidshot2\"></div>\r\n            \r\n             <div class=\"Aboutme2\">\r\n            <div class=\"text2\">\r\n            <h4>The Images to the left are scenes from a video which can be found at the following link </h4>\r\n            <h5> www.youtube.com/watch?v=z-yJ25-9nx0  </h5>\r\n            </div>\r\n            </div>\r\n\r\n            \r\n            \r\n            \r\n            \r\n</body>\r\n\r\n\r\n\r\n            </div>\r\n            \r\n            \r\n        );\r\n        \r\n        }\r\n    \r\n    \r\n    }\r\n\r\n\r\n\r\nexport default Videos;\r\n","import React from \"react\";\r\n\r\n\r\n\r\nclass Error extends React.Component {\r\n \r\n    render() {\r\n        return (\r\n        <div className=\"Error\">\r\n            \r\n            \r\n           \r\n\r\n<body>\r\n<p> Error Path not found </p>\r\n\r\n\r\n</body>\r\n\r\n            </div>\r\n            \r\n            \r\n        );\r\n        \r\n        }\r\n    \r\n    \r\n    }\r\n    //content:url(\".././images/picof.jpg\");\r\n\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    \r\n    return (\r\n    \r\n    <div>\r\n    \r\n    <NavLink to=\"/\"> Home</NavLink>\r\n    <NavLink to=\"/Gallery\"> Gallery</NavLink>\r\n    <NavLink to=\"/Videos\"> Videos</NavLink>\r\n        \r\n    </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\n\r\nimport Home from \"./components/Home\";\r\nimport Gallery from \"./components/Gallery\";\r\nimport Videos from \"./components/Videos\";\r\nimport Error from \"./components/Error\";\r\nimport Nav from \"./components/Nav\";\r\n\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    \r\n    render() {\r\n        \r\n  return (\r\n  \r\n      \r\n      \r\n      \r\n          <BrowserRouter>\r\n      <div>\r\n      <Nav />\r\n      \r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/Gallery\" component={Gallery} />\r\n        <Route path=\"/Videos\" component={Videos} />\r\n        <Route component={Error} />\r\n      \r\n      </Switch>\r\n      \r\n      </div>\r\n      </BrowserRouter>\r\n      \r\n   \r\n   \r\n      \r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}